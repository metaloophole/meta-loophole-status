name: Check Loophole Status

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:

jobs:
  check_loophole:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests python-telegram-bot

      - name: Run Loophole Bot
        env:
          BOT_TOKEN: "7588713286:AAHF_S7ZxD62YI3JDoPtdnvroiOWbA-M2CQ"
          CHAT_ID: "-1002814683347"
          GH_PAT: "ghp_YOUR_REAL_GITHUB_PAT_HERE"  # Yaha tera PAT daal
        run: |
          python3 <<EOF
          import requests, os, json
          from telegram import Bot
          from telegram.error import TelegramError

          bot = Bot(token=os.environ['BOT_TOKEN'])
          chat_id = os.environ['CHAT_ID']
          repo_url = "https://raw.githubusercontent.com/metaloophole/meta-loophole-status/main"

          def notify(text):
              try:
                  bot.send_message(chat_id=chat_id, text=f"🪩 Loophole Bot:\n{text}", parse_mode="Markdown")
              except TelegramError as e:
                  print(f"Telegram Error: {e}")

          try:
              status_req = requests.get(f"{repo_url}/status.json")
              status = status_req.json()
          except Exception as e:
              notify(f"*Failed to load status.json:* `{e}`")
              raise SystemExit()

          if status.get("loophole_active") == True and status.get("region", "").lower() == "usa":
              message = "⚠️ *Loophole ACTIVE for USA!*\nChange your PFP now 😈"

              # Method fetch
              method_req = requests.get(f"{repo_url}/method.txt")
              if method_req.status_code == 200 and method_req.text.strip():
                  message += f"\n\n📄 *Method:*\n`{method_req.text.strip()}`"

              notify(message)

              # Proof photo
              proof_req = requests.get(f"{repo_url}/proof.jpg")
              if proof_req.status_code == 200:
                  with open("proof.jpg", "wb") as f:
                      f.write(proof_req.content)
                  try:
                      bot.send_photo(chat_id=chat_id, photo=open("proof.jpg", "rb"))
                  except TelegramError as e:
                      notify(f"*Failed to send screenshot:* `{e}`")
              else:
                  notify("❗ *Proof image not found or invalid URL.*")
          else:
              print("Loophole not active or not USA.")
          EOF
